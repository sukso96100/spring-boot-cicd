

on:
  push:
    branches: [ main ]

name: Push to AWS ECR

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: springboot
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        
    - name: Generate Dockerrun.aws.json
      id: gen-dockerrun
      env:
        IMAGE_TAG: ${{ github.sha }}
        IMAGE_NAME: ${{ steps.build-image.outputs.image }}
      run: |
        sudo apt update -yq && sudo apt install -yq jq
        jq -c '.Image.Name = "test"' Dockerrun.aws.json > "$IMAGE_TAG-Dockerrun.aws.json"
        echo "::set-output name=dockerrun::$IMAGE_TAG-Dockerrun.aws.json"

   
