# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: java
    - name: Autobuild
      uses: github/codeql-action/autobuild@v1
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
    - name: Lint Code Base
      uses: github/super-linter@v3
      env:
        VALIDATE_ALL_CODEBASE: true
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        LINTER_RULES_PATH: /
        JAVA_FILE_NAME: checkstyle.xml
    
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [8]
    steps:
    - uses: actions/checkout@v2
    # - name: Set up JDK ${{ matrix.java }}
    #   uses: actions/setup-java@v1
    #   with:
    #     java-version: ${{ matrix.java }}
    # - name: Install dependencies
    #   run: mvn install -DskipTests
    # - name: Compile
    #   run: mvn compile
    # - name: Run tests and measure code coverage
    #   run: mvn verify
    - name: Run codacy-coverage-reporter
      uses: codacy/codacy-coverage-reporter-action@master
      with:
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
